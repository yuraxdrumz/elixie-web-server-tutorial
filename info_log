{"timestamp":"2019-03-22 21:30:28.371","message":"Setting Ranch options together with socket options is deprecated. Please use the new map syntax that allows specifying socket options separately from other options.\n","level":"warn"}
{"timestamp":"2019-03-22 21:30:28.371","message":"Starting application...","level":"info"}
{"timestamp":"2019-03-22 21:30:34.243","message":"#PID<0.387.0> running SimpleServer.Router (cowboy_protocol) terminated\nServer: localhost:4000 (http)\nRequest: POST /weather\n** (exit) an exception was raised:\n    ** (FunctionClauseError) no function clause matching in Plug.Conn.resp/3\n        (plug) lib/plug/conn.ex:576: Plug.Conn.resp(%Plug.Conn{adapter: {Plug.Adapters.Cowboy.Conn, :...}, assigns: %{}, before_send: [], body_params: %Plug.Conn.Unfetched{aspect: :body_params}, cookies: %Plug.Conn.Unfetched{aspect: :cookies}, halted: false, host: \"localhost\", method: \"POST\", owner: #PID<0.387.0>, params: %Plug.Conn.Unfetched{aspect: :params}, path_info: [\"weather\"], path_params: %{}, port: 4000, private: %{}, query_params: %Plug.Conn.Unfetched{aspect: :query_params}, query_string: \"\", remote_ip: {127, 0, 0, 1}, req_cookies: %Plug.Conn.Unfetched{aspect: :cookies}, req_headers: [{\"host\", \"localhost:4000\"}, {\"user-agent\", \"insomnia/6.3.2\"}, {\"content-type\", \"application/json\"}, {\"accept\", \"*/*\"}, {\"content-length\", \"22\"}], request_path: \"/weather\", resp_body: nil, resp_cookies: %{}, resp_headers: [{\"cache-control\", \"max-age=0, private, must-revalidate\"}], scheme: :http, script_name: [], secret_key_base: nil, state: :unset, status: 500}, 500, %FunctionClauseError{args: nil, arity: 3, clauses: nil, function: :resp, kind: nil, module: Plug.Conn})\n        (plug) lib/plug/conn.ex:555: Plug.Conn.send_resp/3\n        (plug) lib/plug/error_handler.ex:91: Plug.ErrorHandler.__catch__/6\n        (plug_cowboy) lib/plug/cowboy/handler.ex:18: Plug.Adapters.Cowboy.Handler.upgrade/4\n        (cowboy) src/cowboy_protocol.erl:442: :cowboy_protocol.execute/4","level":"error"}
{"timestamp":"2019-03-22 21:31:05.855","message":"#PID<0.389.0> running SimpleServer.Router (cowboy_protocol) terminated\nServer: localhost:4000 (http)\nRequest: POST /weather\n** (exit) an exception was raised:\n    ** (FunctionClauseError) no function clause matching in Plug.Conn.resp/3\n        (plug) lib/plug/conn.ex:576: Plug.Conn.resp(%Plug.Conn{adapter: {Plug.Adapters.Cowboy.Conn, :...}, assigns: %{}, before_send: [], body_params: %Plug.Conn.Unfetched{aspect: :body_params}, cookies: %Plug.Conn.Unfetched{aspect: :cookies}, halted: false, host: \"localhost\", method: \"POST\", owner: #PID<0.389.0>, params: %Plug.Conn.Unfetched{aspect: :params}, path_info: [\"weather\"], path_params: %{}, port: 4000, private: %{}, query_params: %Plug.Conn.Unfetched{aspect: :query_params}, query_string: \"\", remote_ip: {127, 0, 0, 1}, req_cookies: %Plug.Conn.Unfetched{aspect: :cookies}, req_headers: [{\"host\", \"localhost:4000\"}, {\"user-agent\", \"insomnia/6.3.2\"}, {\"content-type\", \"application/json\"}, {\"accept\", \"*/*\"}, {\"content-length\", \"72\"}], request_path: \"/weather\", resp_body: nil, resp_cookies: %{}, resp_headers: [{\"cache-control\", \"max-age=0, private, must-revalidate\"}], scheme: :http, script_name: [], secret_key_base: nil, state: :unset, status: 500}, 500, %FunctionClauseError{args: nil, arity: 3, clauses: nil, function: :resp, kind: nil, module: Plug.Conn})\n        (plug) lib/plug/conn.ex:555: Plug.Conn.send_resp/3\n        (plug) lib/plug/error_handler.ex:91: Plug.ErrorHandler.__catch__/6\n        (plug_cowboy) lib/plug/cowboy/handler.ex:18: Plug.Adapters.Cowboy.Handler.upgrade/4\n        (cowboy) src/cowboy_protocol.erl:442: :cowboy_protocol.execute/4","level":"error"}
